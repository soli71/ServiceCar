// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OilChangeApp.Data;

#nullable disable

namespace OilChangeApp.Migrations
{
    [DbContext(typeof(OilChangeDbContext))]
    [Migration("20241004194142_AddOil8")]
    partial class AddOil8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("OilChangeApp.Data.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("OilChangeApp.Data.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("OilChangeApp.Data.CustomerService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Kilometers")
                        .HasColumnType("INTEGER");

                    b.Property<long>("NextServiceKilometers")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OilId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OilId");

                    b.ToTable("CustomerServices");
                });

            modelBuilder.Entity("OilChangeApp.Data.CustomerServiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustomerServiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServiceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("CustomerServiceDetail");
                });

            modelBuilder.Entity("OilChangeApp.Data.Oil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Oils");
                });

            modelBuilder.Entity("OilChangeApp.Data.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("OilChangeApp.Data.Car", b =>
                {
                    b.HasOne("OilChangeApp.Data.Customer", null)
                        .WithMany("Cars")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("OilChangeApp.Data.CustomerService", b =>
                {
                    b.HasOne("OilChangeApp.Data.Customer", "Customer")
                        .WithMany("CustomerServices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OilChangeApp.Data.Oil", "Oil")
                        .WithMany()
                        .HasForeignKey("OilId");

                    b.Navigation("Customer");

                    b.Navigation("Oil");
                });

            modelBuilder.Entity("OilChangeApp.Data.CustomerServiceDetail", b =>
                {
                    b.HasOne("OilChangeApp.Data.CustomerService", "CustomerService")
                        .WithMany("CustomerServiceDetails")
                        .HasForeignKey("CustomerServiceId");

                    b.HasOne("OilChangeApp.Data.Service", "Services")
                        .WithMany("CustomerServiceDetails")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerService");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("OilChangeApp.Data.Customer", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("CustomerServices");
                });

            modelBuilder.Entity("OilChangeApp.Data.CustomerService", b =>
                {
                    b.Navigation("CustomerServiceDetails");
                });

            modelBuilder.Entity("OilChangeApp.Data.Service", b =>
                {
                    b.Navigation("CustomerServiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
